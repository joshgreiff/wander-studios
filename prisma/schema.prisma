generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int              @id @default(autoincrement())
  email           String           @unique
  name            String
  phone           String?
  password        String
  isActive        Boolean          @default(true)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  isAdmin         Boolean          @default(false)
  bookings        Booking[]
  packageBookings PackageBooking[]
}

model Class {
  id                 Int                 @id @default(autoincrement())
  date               DateTime
  time               String
  description        String
  capacity           Int
  price              Float?              // Custom price for this class (optional, falls back to default pricing)
  createdAt          DateTime            @default(now())
  address            String?
  archived           Boolean             @default(false)
  isVirtual          Boolean             @default(false)
  minAttendance      Int                 @default(1)
  virtualLink        String?
  bookings           Booking[]
  packageRedemptions PackageRedemption[]
}

model Booking {
  id               Int             @id @default(autoincrement())
  classId          Int
  name             String
  email            String
  phone            String?
  waiverName       String
  waiverAgreed     Boolean
  paid             Boolean         @default(false)
  createdAt        DateTime        @default(now())
  waiverId         Int?
  userId           Int?
  packageBookingId Int?
  class            Class           @relation(fields: [classId], references: [id], onDelete: Cascade)
  packageBooking   PackageBooking? @relation(fields: [packageBookingId], references: [id])
  user             User?           @relation(fields: [userId], references: [id])
  waiver           Waiver?         @relation(fields: [waiverId], references: [id])
}

model ClassPackage {
  id              Int              @id @default(autoincrement())
  name            String
  description     String
  classCount      Int
  price           Float
  discount        Float?
  isActive        Boolean          @default(true)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  expiresInDays   Int              @default(90)
  packageBookings PackageBooking[]
}

model PackageBooking {
  id                 Int                 @id @default(autoincrement())
  packageId          Int
  customerName       String
  customerEmail      String
  customerPhone      String?
  waiverName         String
  waiverAgreed       Boolean
  paid               Boolean             @default(false)
  createdAt          DateTime            @default(now())
  waiverId           Int?
  userId             Int
  expiresAt          DateTime
  classesRemaining   Int
  classesUsed        Int                 @default(0)
  paymentId          String?
  bookings           Booking[]
  package            ClassPackage        @relation(fields: [packageId], references: [id])
  user               User                @relation(fields: [userId], references: [id])
  waiver             Waiver?             @relation(fields: [waiverId], references: [id])
  packageRedemptions PackageRedemption[]
}

model PackageRedemption {
  id               Int            @id @default(autoincrement())
  packageBookingId Int
  classId          Int
  redeemedAt       DateTime       @default(now())
  class            Class          @relation(fields: [classId], references: [id], onDelete: Cascade)
  packageBooking   PackageBooking @relation(fields: [packageBookingId], references: [id], onDelete: Cascade)
}

model Waiver {
  id               Int              @id @default(autoincrement())
  firstName        String
  lastName         String
  email            String
  phone            String?
  dateOfBirth      DateTime?
  emergencyContact String
  emergencyPhone   String
  relationship     String?
  healthConditions String?
  injuries         String?
  medications      String?
  isPregnant       Boolean          @default(false)
  pregnancyWeeks   Int?
  digitalSignature String
  waiverAgreed     Boolean          @default(false)
  healthInfoAgreed Boolean          @default(false)
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  bookings         Booking[]
  packageBookings  PackageBooking[]
}
